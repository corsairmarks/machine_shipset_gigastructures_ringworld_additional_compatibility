namespace = giga_megastructure_supplemental

# triggered by on_megastructure_upgrade_begin
# gigas defaults to mammalian_01 for cultures it doesn't support, but this compat patch adds support for machine_01
# root = country (owner)
# from = megastructure
# fromfrom = galactic_object (system)
country_event = {
	id = giga_megastructure_supplemental.2
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		graphical_culture = machine_01
		from = {
			OR = {
				# titanic
				is_megastructure_type = ringworld_titanic_0
				is_megastructure_type = ring_world_titanic_ruined
				# behemoth
				is_megastructure_type = ringworld_behemoth_0
				is_megastructure_type = ring_world_behemoth_ruined
				# gargantuan
				is_megastructure_type = ringworld_gargantuan_0
				is_megastructure_type = ring_world_gargantuan_ruined
			}
		}
	}
	immediate = {
		from = { set_graphical_culture = machine_01 }
	}
}

# triggered by on_megastructure_upgraded
# gigas always sets the construction frames to the mammalian_01 culture, but this compat patch adds support for machine_01
# root = country (owner)
# from = megastructure
# fromfrom = galactic_object (system)
country_event = {
	id = giga_megastructure_supplemental.3
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		graphical_culture = machine_01
		from = {
			OR = {
				# regular ringworlds already set themselves to match their owner's graphical culture
				is_megastructure_type = ringworld_titanic_1
				# behemoth
				is_megastructure_type = ringworld_behemoth_1
				# gargantuan
				is_megastructure_type = ringworld_gargantuan_1
			}
		}
	}
	immediate = {
		from = {
			switch = {
				trigger = is_megastructure_type
				ringworld_titanic_1 = {
					prev.fromfrom = {
						every_system_megastructure = {
							limit = { is_megastructure_type = ringworld_t_3x_segment }
							set_graphical_culture = machine_01
						}
					}
				}
				ringworld_behemoth_1 = {
					prev.fromfrom = {
						every_system_megastructure = {
							limit = { is_megastructure_type = ringworld_b_3x_segment }
							set_graphical_culture = machine_01
						}
					}
				}
				ringworld_gargantuan_1 = {
					prev.fromfrom = {
						every_system_megastructure = {
							limit = { is_megastructure_type = ringworld_g_3x_segment }
							set_graphical_culture = machine_01
						}
					}
				}
			}
		}
	}
}

# triggered by on_megastructure_upgraded
# gigas always sets the finished "planets" to the mammalian_01 culture, but this compat patch adds support for machine_01
# root = country (owner)
# from = megastructure
# fromfrom = galactic_object (system)
country_event = {
	id = giga_megastructure_supplemental.4
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		graphical_culture = machine_01
		from = {
			OR = {
				# regular ringworlds already set themselves to match their owner's graphical culture
				is_megastructure_type = ringworld_titanic_2
				is_megastructure_type = ring_world_titanic_restored
				# behemoth
				is_megastructure_type = ringworld_behemoth_2
				is_megastructure_type = ring_world_behemoth_restored
				# gargantuan
				is_megastructure_type = ringworld_gargantuan_2
				is_megastructure_type = ring_world_gargantuan_restored
			}
		}
	}
	immediate = {
		if = {
			limit  = {
				from = {
					OR = {
						is_megastructure_type = ringworld_titanic_2
						is_megastructure_type = ring_world_titanic_restored
					}
				}
			}
			fromfrom = {
				every_system_planet = {
					limit = {
						is_planet_class = pc_ringworld_habitable
						has_planet_flag = giga_ringworld_tit
						NOR = {
							has_planet_flag = giga_ringworld_beh
							has_planet_flag = giga_ringworld_gar
						}
					}
					set_planet_entity = {
						entity = "titanic_gaia_habitable_sector_entity"
						graphical_culture = machine_01
					}
				}
				every_system_planet = {
					limit = {
						is_planet_class = pc_ringworld_seam
						has_planet_flag = giga_ringworld_tit
						NOR = {
							has_planet_flag = giga_ringworld_beh
							has_planet_flag = giga_ringworld_gar
						}
					}
					set_planet_entity = {
						entity = "titanic_seam_sector_entity"
						graphical_culture = machine_01
					}
				}
				every_system_planet = {
					limit = {
						is_planet_class = pc_ringworld_tech
						has_planet_flag = giga_ringworld_tit
						NOR = {
							has_planet_flag = giga_ringworld_beh
							has_planet_flag = giga_ringworld_gar
						}
					}
					set_planet_entity = {
						entity = "titanic_tech_sector_entity"
						graphical_culture = machine_01
					}
				}
			}
		}
		else_if = {
			limit  = {
				from = {
					OR = {
						is_megastructure_type = ringworld_behemoth_2
						is_megastructure_type = ring_world_behemoth_restored
					}
				}
			}
			fromfrom = {
				every_system_planet = {
					limit = {
						is_planet_class = pc_ringworld_habitable
						has_planet_flag = giga_ringworld_beh
						NOT = { has_planet_flag = giga_ringworld_gar }
					}
					set_planet_entity = {
						entity = "behemoth_gaia_habitable_sector_entity"
						graphical_culture = machine_01
					}
				}
				every_system_planet = {
					limit = {
						is_planet_class = pc_ringworld_seam
						has_planet_flag = giga_ringworld_beh
						NOT = { has_planet_flag = giga_ringworld_gar }
					}
					set_planet_entity = {
						entity = "behemoth_seam_sector_entity"
						graphical_culture = machine_01
					}
				}
				every_system_planet = {
					limit = {
						is_planet_class = pc_ringworld_tech
						has_planet_flag = giga_ringworld_beh
						NOT = { has_planet_flag = giga_ringworld_gar }
					}
					set_planet_entity = {
						entity = "behemoth_tech_sector_entity"
						graphical_culture = machine_01
					}
				}
			}
		}
		else_if = {
			limit  = {
				from = {
					OR = {
						is_megastructure_type = ringworld_gargantuan_2
						is_megastructure_type = ring_world_gargantuan_restored
					}
				}
			}
			fromfrom = {
				every_system_planet = {
					limit = {
						is_planet_class = pc_ringworld_habitable
						has_planet_flag = giga_ringworld_gar
					}
					set_planet_entity = {
						entity = "gargantuan_gaia_habitable_sector_01_entity"
						graphical_culture = machine_01
					}
				}
				every_system_planet = {
					limit = {
						is_planet_class = pc_ringworld_seam
						has_planet_flag = giga_ringworld_gar
					}
					set_planet_entity = {
						entity = "gargantuan_seam_sector_entity"
						graphical_culture = machine_01
					}
				}
				every_system_planet = {
					limit = {
						is_planet_class = pc_ringworld_tech
						has_planet_flag = giga_ringworld_gar
					}
					set_planet_entity = {
						entity = "gargantuan_tech_sector_entity"
						graphical_culture = machine_01
					}
				}
			}
		}
	}
}